name: Cookie Consent Tests

on:
  # Nur bei Pull Requests testen - nicht bei jedem Push
  pull_request:
    branches: [main]
    paths:
      - 'assets/js/cookie-consent.js'
      - '_layouts/default.html'
      - 'datenschutz.md'
      - 'impressum.md'
      - 'assets/css/style.css'
  # Manueller Trigger f√ºr Debugging
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests & Jest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm install --silent 2>/dev/null || {
            echo "‚ö†Ô∏è npm install had warnings, but continuing..."
            npm install --no-audit --no-fund --silent
          }

      - name: Run Jest Unit Tests
        run: |
          echo "üß™ Running Jest Unit Tests..."
          npm run test:cookie-new

      - name: Run All Tests
        run: |
          echo "üöÄ Running All Jest Tests..."
          npm test

      - name: Generate Test Coverage
        run: |
          echo "üìä Generating Test Coverage..."
          npm run test:coverage || echo "Coverage generation completed"

  basic-tests:
    runs-on: ubuntu-latest
    name: Basic Tests & Validation
    needs: unit-tests

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          npm install --silent 2>/dev/null || {
            echo "‚ö†Ô∏è npm install had warnings, but continuing..."
            npm install --no-audit --no-fund --silent
          }

      - name: Validate Cookie Consent Implementation
        run: |
          echo "üîç Checking Cookie Consent Implementation..."

          # Pr√ºfe ob wichtige Dateien vorhanden sind
          if [ -f "_includes/cookie-consent.html" ]; then
            echo "‚úÖ Cookie Consent Include gefunden"
          else
            echo "‚ùå Cookie Consent Include fehlt"
            exit 1
          fi

          if [ -f "_includes/ga.js" ]; then
            echo "‚úÖ Google Analytics Include gefunden"
          else
            echo "‚ùå Google Analytics Include fehlt"
            exit 1
          fi

          # Pr√ºfe ob Google Analytics conditional geladen wird (neue Implementierung)
          if grep -q "readCookie.*cookie-notice-dismissed" _includes/cookie-consent.html && grep -q "loadAnalytics" _layouts/default.html; then
            echo "‚úÖ Google Analytics wird conditional geladen"
          else
            echo "‚ùå Google Analytics conditional loading fehlt"
            echo "Debug: Checking actual implementation..."
            echo "Cookie consent file:"
            grep -n "readCookie" _includes/cookie-consent.html || true
            echo "Layout file analytics:"
            grep -n "loadAnalytics\|gtag\|G-6P6F8KLCQS" _layouts/default.html || true
            exit 1
          fi

          # Pr√ºfe ob Cookie-Management implementiert ist
          if grep -q "createCookie\|readCookie" _includes/cookie-consent.html; then
            echo "‚úÖ Cookie-Management vorhanden"
          else
            echo "‚ùå Cookie-Management fehlt"
            exit 1
          fi

          # Pr√ºfe ob Cookie-Banner vorhanden ist
          if grep -q "cookie-notice" _includes/cookie-consent.html; then
            echo "‚úÖ Cookie-Banner implementiert"
          else
            echo "‚ùå Cookie-Banner fehlt"
            exit 1
          fi

  privacy-compliance:
    runs-on: ubuntu-latest
    name: Privacy Policy Compliance

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Validate DSGVO Compliance
        run: |
          echo "üîç Validating DSGVO Compliance..."

          # Pr√ºfe Datenschutzerkl√§rung
          PRIVACY_CHECKS=("Google Analytics" "Cookie-Banner" "Opt-Out" "Art. 6")

          for check in "${PRIVACY_CHECKS[@]}"; do
            if grep -q "$check" datenschutz.md; then
              echo "‚úÖ $check gefunden"
            else
              echo "‚ùå $check fehlt in Datenschutzerkl√§rung"
              exit 1
            fi
          done

          # Pr√ºfe Impressum
          if grep -q "Thomas Schuster" impressum.md && grep -q "Schachenmeierstra√üe" impressum.md; then
            echo "‚úÖ Impressum vollst√§ndig"
          else
            echo "‚ùå Impressum unvollst√§ndig"
            exit 1
          fi

  file-validation:
    runs-on: ubuntu-latest
    name: File Structure Validation

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check Required Files
        run: |
          echo "üìÅ Checking Required Files..."

          REQUIRED_FILES=(
            "_includes/cookie-consent.html"
            "_includes/ga.js"
            "assets/css/style.css"
            "datenschutz.md"
            "impressum.md"
            "_layouts/default.html"
            "package.json"
          )

          for file in "${REQUIRED_FILES[@]}"; do
            if [ -f "$file" ]; then
              echo "‚úÖ $file vorhanden"
            else
              echo "‚ùå $file fehlt"
              exit 1
            fi
          done

      - name: Check Bundle Sizes
        run: |
          echo "üìä Checking Bundle Sizes..."

          if [ -f "_includes/cookie-consent.html" ]; then
            INCLUDE_SIZE=$(stat -c%s "_includes/cookie-consent.html" 2>/dev/null || stat -f%z "_includes/cookie-consent.html")
            echo "üì¶ Cookie Consent Include: ${INCLUDE_SIZE} bytes"
            
            if [ $INCLUDE_SIZE -gt 50000 ]; then
              echo "‚ö†Ô∏è Include ist gro√ü (>${INCLUDE_SIZE} bytes)"
            else
              echo "‚úÖ Include Gr√∂√üe OK"
            fi
          fi

  syntax-check:
    runs-on: ubuntu-latest
    name: Syntax & Format Check

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check JavaScript Syntax
        run: |
          echo "üìù Checking JavaScript Syntax..."

          # Pr√ºfe HTML/JS Syntax in Include
          if [ -f "_includes/cookie-consent.html" ]; then
            # Basic syntax check for HTML/JS
            if grep -q "<script>" "_includes/cookie-consent.html" && grep -q "</script>" "_includes/cookie-consent.html"; then
              echo "‚úÖ HTML/JavaScript Struktur OK"
            else
              echo "‚ùå HTML/JavaScript Struktur unvollst√§ndig"
              exit 1
            fi
          fi

      - name: Check HTML Structure
        run: |
          echo "üèóÔ∏è Checking HTML Structure..."

          # Pr√ºfe ob wichtige HTML-Elemente vorhanden sind
          if grep -q "cookie-consent.html" _layouts/default.html && grep -q "cookie-notice" _includes/cookie-consent.html; then
            echo "‚úÖ HTML Struktur OK"
          else
            echo "‚ùå HTML Struktur unvollst√§ndig"
            exit 1
          fi

  deployment-readiness:
    runs-on: ubuntu-latest
    name: Deployment Ready Check
    needs: [unit-tests, basic-tests, privacy-compliance, file-validation, syntax-check]

    steps:
      - name: Final Summary
        run: |
          echo "üéØ All Tests Passed - Ready for Deployment!"

          echo "## üç™ Cookie Consent Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Test Category | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests (Jest) | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| Basic Implementation | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| Privacy Compliance | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| File Structure | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "| Syntax Check | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Cookie System: Jekyll-native with conditional analytics loading**" >> $GITHUB_STEP_SUMMARY
          echo "**Status: ‚úÖ DEPLOYMENT READY**" >> $GITHUB_STEP_SUMMARY
